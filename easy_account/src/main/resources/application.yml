server:
  servlet:
    context-path: /account
    session:
      cookie:
        path: /
        name: esession
  port: 8080
  tomcat:
    max-http-form-post-size: 20


spring:
  datasource:
    druid:
      db-type: mysql
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://${SQL_HOST:localhost}:3306/easy_core?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai&allowMultiQueries=true&autoReconnect=true
    username: ${SQL_USR:root}
    password: ${SQL_PWD:root}
#  redis:
#    host: localhost
#    port: 6379
#    username: ""
#    password: ""
#    lettuce:
#      shutdown-timeout: 100
  jackson:
    # 设置属性命名策略,对应jackson下PropertyNamingStrategy中的常量值，
    # SNAKE_CASE-返回的json驼峰式转下划线，json body下划线传到后端自动转驼峰式
    property-naming-strategy: SNAKE_CASE
    # 当地时区
    locale: zh
    # 设置全局时区
    time-zone: GMT+8
    # 常用，全局设置pojo或被@JsonInclude注解的属性的序列化方式
    # 不为空的属性才会序列化,具体属性可看JsonInclude.Include
    default-property-inclusion: NON_NULL
    # 全局日期返回格式设置@JsonFormat的格式pattern
    date-format: yyyy-MM-dd HH:mm:ss
    generator:
      write_numbers_as_strings: true
  session:
    store-type: jdbc
    timeout: 1800
    redis:
      namespace: easy:session
    jdbc:
      initialize-schema: embedded
      # every 3 minutes
      cleanup-cron: 0 */3 * * * *
      table-name: session

  # 数据库版本管理
  flyway:
    # Prefix 前缀：V 代表版本迁移，U 代表撤销迁移，R 代表可重复迁移
    # Version 版本号：版本号通常 . 和整数组成
    # Separator 分隔符：固定由两个下划线 __ 组成
    # Description 描述：由下划线分隔的单词组成，用于描述本次迁移的目的
    # Suffix 后缀：如果是 SQL 文件那么固定由 .sql 组成，如果是基于 Java 类则默认不需要后缀
    enabled: true
    # 禁止清理数据库表
    clean-disabled: true
    # 如果数据库不是空表，需要设置成 true，否则启动报错
    baseline-on-migrate: true
    # 如果 flyway 不是项目初期引入，而是在数据库已有表的情况下引入时必须设置 baseline-on-migrate: true，设置该配置启动项目后，
    # flyway 就会在数据库中创建 flyway_schema_history 表，并且会往该表中插入一条 version = 1 的建表记录
    # 与 baseline-on-migrate: true 搭配使用
    baseline-version: 0
    locations:
      - classpath:db/migration
  mvc:
    format:
      date-time: yyyy-MM-dd HH:mm:ss
      date: yyyy-MM-dd
logging:
  level:
    io.github.xbeeant: DEBUG

app:
  permit:
    - "/api/login"
    - "/api/user/register"
    - "/api/authroity/**"
    - "/"

mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.log4j2.Log4j2Impl
    map-underscore-to-camel-case: true